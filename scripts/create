#!/bin/bash

POSITIONAL_ARGS=()
while [ $# -gt 0 ]; do
  case $1 in
    --ca)
      ca="$2"
      shift # past argument
      shift # past value
      ;;
    --days)
      days="$2"
      shift # past argument
      shift # past value
      ;;
    -*|--*)
      echo "Unknown option $1"
      exit 1
      ;;
    *)
      POSITIONAL_ARGS+=("$1") # save positional arg
      shift # past argument
      ;;
  esac
done
set -- "${POSITIONAL_ARGS[@]}" # restore positional parameters

host="$1"

if [ -z "$ca" ]; then
  ca_root="$ca_home"
else
  ca_root="$ca_home/$ca"
fi

# Check CA folder exists
if [ ! -x "$ca_root" ]; then
  echo CA not found.
  exit 1
fi

if [ -z "$ca" ]; then
  ca_private_root="$ca_private"
else
  ca_private_root="$ca_private/$ca"
fi

# Check CA private store exists
if [ ! -d "$ca_private_root" ]; then
  echo Could not open private store
  exit 1
fi

# Create certs root folder if it doesn't exist
certs_root="$certs_home/$host"
if [ ! -d "$certs_root" ]; then
    mkdir -p "$certs_root"
fi

# Switch to CA root
cd "$ca_root"

host_root="$host"
mkdir -p "$host_root"

datestr="$(date +%Y%m%d-%H%M%S)"

# Create key pair
openssl genrsa -out "$host_root/$host-private.key" 4096

# Write-protect the key
chmod 400 "$host_root/$host-private.key"

# Create a CSR
openssl req -new \
  -out "$host_root/$host.csr" \
  -key "$host_root/$host-private.key" \
  -config "ca-openssl.cnf"

CERTFQDN="$host.$DOMAIN" openssl ca \
  -in "$host_root/$host.csr" \
  -out "$host_root/$host.crt" \
  -config "ca-openssl.cnf" \
  -extensions x509v3_FQDN \
  -days ${days:-730} \
  -cert "$ca-ca.crt" \
  -keyfile "$ca_private_root/$ca-private.key"

# Remove the CSR if it was created
if [ -x "$host_root/$host.csr" ]; then rm "$host_root/$host.csr"; fi

# If certificate was created
if [ -x "$host_root/$host.crt" ]; then
    # Copy the certificate to the certs folder
    cp "$host_root/$host.crt" "$certs_root/$host.crt"

    # Create the certificate bundle
    zip "$certs_root/bundle.zip" \
        "$host_root/$host.crt" \
        "$ca-ca.crt"
fi